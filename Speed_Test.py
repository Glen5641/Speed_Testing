import speedtest
import re
from mechanize import Browser
from datetime import datetime
import netifaces as ni
import subprocess
import time

## Program to Run a Speed Test and fill form for Single Digits.
## This program uses mechanize to open the webpage and fill the form.

# Get Site Code
def get_site_code() :
    while( 1 ) :
        site = input( "Site Code : " ).upper()
        if site == "TCOM" :
            site = 'OK-TCOM'
        elif site == "CPAR" :
            site = 'OK-CPAR'
        elif site == "T" :
            site = 'OK-TCOM'
        elif site == "C" :
            site = 'OK-CPAR'
        if site != 'OK-TCOM' and site != 'OK-CPAR' :
            print( "invalid site code" )
        else:
            return site

# Get Wired or Wireless
def get_wired_or_wireless() :
    while( 1 ) :
        wire = input( "Wired?(Y/n) : " ).upper()
        if wire == 'Y' :
            return 'Wired'
        elif wire == 'N' :
            return 'Wireless'
        else :
            print( "Invalid Choice" )

# Get SSID if Wireless
def get_SSID( wire ) :
    if wire is 'Wireless' :
        scanoutput = str( subprocess.check_output( [ "iwlist", "wlp3s0", "scan" ] ) )
        for line in scanoutput.split() :
            if line.startswith( "ESSID" ) :
                isRight = input( "is {} right : ".format( line.split( '"' )[ 1 ] ) ).lower()
                if isRight == 'y' :
                    return line.split( '"' )[ 1 ]
                else :
                    exit()
    return ''

# Get WiFi Band from SSID
def get_band( ssid ) :
    if ssid is '' :
        return ''
    else :
        if ssid.split( "-" )[ 1 ] == '5G' :
            return '5Ghz'
        else:
            return '2.4Ghz'

# Get IP Address from Net Interfaces
def get_IP_address( wire ) :
    if wire is 'Wireless' :
        return ni.ifaddresses( 'wlp3s0' )[ ni.AF_INET ][ 0 ][ 'addr' ]
    return ni.ifaddresses( 'lo' )[ ni.AF_INET ][ 0 ][ 'addr' ]

# Get Loss, Min, Max, and Avg from OS
def get_dns_pings():
    ping = subprocess.check_output( [ "ping", "8.8.8.8", "-c", "20" ] )
    ping = str( ping )
    ping = ping.split( "\\n" )
    lossLine = ping[ len(ping) - 3 ]
    statLine = ping[ len(ping) - 2 ]
    dns_loss = re.findall( r"\d+",     lossLine.split( ',' )[ 2 ] )[ 0 ]
    dns_min  = re.findall( "\d+\.\d+", statLine.split( '/' )[ 3 ] )[ 0 ]
    dns_max  = re.findall( "\d+\.\d+", statLine.split( '/' )[ 5 ] )[ 0 ]
    dns_avg  = re.findall( "\d+\.\d+", statLine.split( '/' )[ 4 ] )[ 0 ]
    return "{}/{}/{}/{}".format( dns_loss, dns_min, dns_max, dns_avg )

# Get Loss, Min, Max, and Avg from OS
def get_gateway_pings( ip_address ):
    nums = ip_address.split( "." )
    gate = "{}.{}.{}.{}".format( nums[0], nums[1], nums[2], 1 )
    ping = subprocess.check_output( [ "ping", gate, "-c", "20" ] )
    ping = str( ping )
    ping = ping.split( "\\n" )
    lossLine = ping[ len(ping) - 3 ]
    statLine = ping[ len(ping) - 2 ]
    dns_loss = re.findall( r"\d+",     lossLine.split( ',' )[ 2 ] )[ 0 ]
    dns_min  = re.findall( "\d+\.\d+", statLine.split( '/' )[ 3 ] )[ 0 ]
    dns_max  = re.findall( "\d+\.\d+", statLine.split( '/' )[ 5 ] )[ 0 ]
    dns_avg  = re.findall( "\d+\.\d+", statLine.split( '/' )[ 4 ] )[ 0 ]
    return "{}/{}/{}/{}".format( dns_loss, dns_min, dns_max, dns_avg )





# Program to fill out Internet Speed Test Forms
# for Single Digits'. Is not written for use on
# other computers due to linux capabilities and
# card names.
#
# @Author CGlenn
# @Version 1.0
if __name__ == "__main__" :

    # Set Speedtest Server
    s = speedtest.Speedtest()
    s.get_servers( [] )
    s.get_best_server()
    start = time.time()

    # Get all Information
    site           = get_site_code()
    name           = 'Chase Glenn'
    date_completed = datetime.today().strftime( '%m/%d/%Y' )
    wire           = get_wired_or_wireless()
    ssid           = get_SSID( wire )
    band           = get_band( ssid )
    building       = input( "Building and Floor? : " )
    ip_address     = get_IP_address( wire )
    down1          = round( s.download() / 1000000.0, 3 )
    up1            = round( s.upload()   / 1000000.0, 3 )
    down2          = round( s.download() / 1000000.0, 3 )
    up2            = round( s.upload()   / 1000000.0, 3 )
    down3          = round( s.download() / 1000000.0, 3 )
    up3            = round( s.upload()   / 1000000.0, 3 )
    dns_pings      = get_dns_pings()
    gateway_pings  = get_gateway_pings( ip_address )
    comment        = 'AutoGenerated using SpeedTest.net\'s CLI library and OS'
    end            = time.time()

    # force all information to strings
    site           = str( site           )
    name           = str( name           )
    date_completed = str( date_completed )
    wire           = str( wire           )
    ssid           = str( ssid           )
    band           = str( band           )
    building       = str( building       )
    ip_address     = str( ip_address     )
    down1          = str( down1          )
    up1            = str( up1            )
    down2          = str( down2          )
    up2            = str( up2            )
    down3          = str( down3          )
    up3            = str( up3            )
    dns_pings      = str( dns_pings      )
    gateway_pings  = str( gateway_pings  )
    comment        = str( comment        )

    # Print all Information
    print( "SITE CODE     : {}".format( site           ))
    print( "TECH NAME     : {}".format( name           ))
    print( "DATE          : {}".format( date_completed ))
    print( "CONNECTION    : {}".format( wire           ))
    print( "SSID          : {}".format( ssid           ))
    print( "BAND          : {}".format( band           ))
    print( "BUILDING      : {}".format( building       ))
    print( "IP ADDRESS    : {}".format( ip_address     ))
    print( "DOWNLOAD 1    : {}".format( down1          ))
    print( "UPLOAD 1      : {}".format( up1            ))
    print( "DOWNLOAD 2    : {}".format( down2          ))
    print( "UPLOAD 2      : {}".format( up2            ))
    print( "DOWNLOAD 3    : {}".format( down3          ))
    print( "UPLOAD 3      : {}".format( up3            ))
    print( "DNS PINGS     : {}".format( dns_pings      ))
    print( "GATEWAY PINGS : {}".format( gateway_pings  ))
    print( "Elapsed Time  : {}".format( end - start    ))

    # Open Website and Populate
    br = Browser()
    br.open("https://app.smartsheet.com/b/form/75d9528cc9c44dc0be52fab371e169a8")
    br.select_form(name="ctlForm")
    br[ "1328472831" ] = [site, ]
    br[ "1328825679" ] = name
    br[ "1327953607" ] = date_completed
    br[ "1328603442" ] = [wire, ]
    br[ "1328577697" ] = ssid
    br[ "1353566089" ] = [band, ]
    br[ "1328603443" ] = building
    br[ "1328493182" ] = ip_address
    br[ "1328472830" ] = down1
    br[ "1328472832" ] = up1
    br[ "1328472833" ] = down2
    br[ "1328472834" ] = up2
    br[ "1328472835" ] = down3
    br[ "1327953606" ] = up3
    br[ "1328455740" ] = dns_pings
    br[ "1328455741" ] = gateway_pings
    br[ "1350193943" ] = comment
    response = br.submit()
